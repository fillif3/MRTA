FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

// Define input variables
VAR_INPUT				
	distance : REAL;
	cs : REAL;
END_VAR

// Define output variable
VAR_OUTPUT				
	bid : REAL;
END_VAR

// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
FUZZIFY distance			
	TERM short := (0, 1) (0.4, 0) ; 
	TERM medium := (0.1, 0) (0.4,1) (0.6,1) (0.9,0);
	TERM long := (0.6, 0) (0.9, 1) (1,1);
END_FUZZIFY

// Fuzzify input variable 'food': { 'rancid', 'delicious' }
FUZZIFY cs			
	TERM safe := (0, 1) (0.4, 0) ; 
	TERM dangerous := (0.1, 0) (0.4,1) (0.6,1) (0.9,0);
	TERM alert := (0.6, 0) (0.9, 1) (1,1);
END_FUZZIFY

// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
DEFUZZIFY bid	
	TERM verylow := trian 0 2.5 5;		
	TERM low := trian 2.5 5 7.5;
	TERM average := trian 5 7.5 10;
	TERM high := trian 7.5 10 12.5;
	TERM veryhigh := trian 10 12.5 15;
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	RULE 1 : IF distance IS short AND cs IS safe THEN bid IS verylow;
	RULE 2 : IF distance IS medium AND cs IS safe THEN bid IS low;
	RULE 3 : IF distance IS long AND cs IS safe THEN bid IS average;
	RULE 4 : IF distance IS short AND cs IS dangerous THEN bid IS low;
	RULE 5 : IF distance IS medium AND cs IS dangerous THEN bid IS high;
	RULE 6 : IF distance IS long AND cs IS dangerous THEN bid IS veryhigh;
	RULE 7 : IF distance IS short AND cs IS alert THEN bid IS high;
	RULE 8 : IF distance IS medium AND cs IS alert THEN bid IS veryhigh;
	RULE 9 : IF distance IS long AND cs IS alert THEN bid IS veryhigh;
END_RULEBLOCK

END_FUNCTION_BLOCK
